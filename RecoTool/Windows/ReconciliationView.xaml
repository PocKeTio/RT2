<UserControl x:Class="RecoTool.Windows.ReconciliationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RecoTool.Windows"
             x:Name="Root"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="900">
    <UserControl.Resources>
        <!-- Item template that renders null items as an empty option so users can clear selection -->
        <DataTemplate x:Key="UserFieldItemTemplate">
            <TextBlock>
                <TextBlock.Text>
                    <Binding Path="USR_FieldName"/>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <!-- Force ComboBoxItem alignment to avoid theme templates using ancestor bindings that may fail during dynamic updates -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        
        <!-- Centered Text Style for DataGrid Columns -->
        <Style x:Key="CenteredTextStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>
        
        <!-- Right-aligned Text Style for Numbers -->
        <Style x:Key="RightAlignedTextStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
        </Style>
        
        <!-- Centered CheckBox Style -->
        <Style x:Key="CenteredCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <!-- Converters -->
        <local:UserFieldOptionsConverter x:Key="UserFieldOptionsConverter"/>
        <local:ActionColorConverter x:Key="ActionColorConverter"/>
        <local:GuaranteeTypeDisplayConverter x:Key="GuaranteeTypeDisplayConverter"/>
        <local:UserFieldIdToNameConverter x:Key="UserFieldIdToNameConverter"/>
        <local:BoolToPendingDoneConverter x:Key="BoolToPendingDoneConverter"/>
        <local:AssigneeIdToNameConverter x:Key="AssigneeIdToNameConverter"/>
        <local:IsPositiveConverter x:Key="IsPositiveConverter"/>
        <local:IsNegativeConverter x:Key="IsNegativeConverter"/>
        <local:PluralConverter x:Key="PluralConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid Background="{DynamicResource BNPBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Compact Modern Header with Integrated KPIs -->
        <Border x:Name="HeaderBorder" Grid.Row="0" Background="White" Padding="12,8" Effect="{StaticResource StandardShadow}" BorderBrush="#E0E0E0" BorderThickness="0,0,0,1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- View Info + KPIs Integrated -->
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <!-- View Title Card -->
                    <Border Background="{DynamicResource BNPMainGreenBrush}" CornerRadius="8" Padding="12,8" Margin="0,0,12,0">
                        <StackPanel Orientation="Horizontal">
                            <Border Background="White" CornerRadius="6" Width="32" Height="32" Margin="0,0,10,0">
                                <TextBlock Text="&#xE81E;" FontFamily="Segoe MDL2 Assets" FontSize="16" Foreground="{DynamicResource BNPMainGreenBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                            </Border>
                            <StackPanel VerticalAlignment="Center">
                                <TextBlock x:Name="TitleText" Text="Default View" FontSize="14" FontWeight="Bold" Foreground="White"/>
                                <StackPanel Orientation="Horizontal" Margin="0,2,0,0">
                                    <TextBlock Text="&#xE8C9;" FontFamily="Segoe MDL2 Assets" FontSize="10" Foreground="White" Opacity="0.9" VerticalAlignment="Center" Margin="0,0,5,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                    <TextBlock x:Name="AccountInfoText" Text="Account: All | Status: All" Foreground="White" Opacity="0.9" FontSize="10"/>
                                    <TextBlock Text="&#xE909;" FontFamily="Segoe MDL2 Assets" FontSize="10" Foreground="White" Opacity="0.9" VerticalAlignment="Center" Margin="8,0,5,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                    <TextBlock x:Name="CountryPivotReceivableText" Text="" Foreground="White" Opacity="0.9" FontSize="10"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <!-- Enhanced KPI Cards with Labels -->
                    <StackPanel Orientation="Horizontal">
                        <!-- Total Rows -->
                        <Border Background="#F4F7FE" CornerRadius="6" Padding="10,6" Margin="0,0,8,0" BorderBrush="#E0E6F7" BorderThickness="1">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE179;" FontFamily="Segoe MDL2 Assets" Foreground="#3B82F6" FontSize="12" VerticalAlignment="Center" Margin="0,0,6,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                <StackPanel>
                                    <TextBlock Text="Total" FontSize="9" Foreground="#64748B" Margin="0,0,0,1"/>
                                    <TextBlock x:Name="KpiTotalCountText" Text="0" FontSize="13" FontWeight="Bold" Foreground="#0F172A"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        <!-- Matched -->
                        <Border Background="#ECFDF5" CornerRadius="6" Padding="10,6" Margin="0,0,8,0" BorderBrush="#D1FAE5" BorderThickness="1">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE73E;" FontFamily="Segoe MDL2 Assets" Foreground="#10B981" FontSize="12" VerticalAlignment="Center" Margin="0,0,6,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                <StackPanel>
                                    <TextBlock Text="Matched" FontSize="9" Foreground="#065F46" Margin="0,0,0,1"/>
                                    <TextBlock x:Name="KpiMatchedCountText" Text="0" FontSize="13" FontWeight="Bold" Foreground="#064E3B"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        <!-- Unmatched -->
                        <Border Background="#FEF2F2" CornerRadius="6" Padding="10,6" Margin="0,0,8,0" BorderBrush="#FEE2E2" BorderThickness="1">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE711;" FontFamily="Segoe MDL2 Assets" Foreground="#EF4444" FontSize="12" VerticalAlignment="Center" Margin="0,0,6,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                <StackPanel>
                                    <TextBlock Text="Unmatched" FontSize="9" Foreground="#7F1D1D" Margin="0,0,0,1"/>
                                    <TextBlock x:Name="KpiUnmatchedCountText" Text="0" FontSize="13" FontWeight="Bold" Foreground="#991B1B"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        <!-- To Review -->
                        <Border Background="#FFF7ED" CornerRadius="6" Padding="10,6" Margin="0,0,8,0" BorderBrush="#FFEDD5" BorderThickness="1">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xE7BA;" FontFamily="Segoe MDL2 Assets" Foreground="#FB923C" FontSize="12" VerticalAlignment="Center" Margin="0,0,6,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                <StackPanel>
                                    <TextBlock Text="To Review" FontSize="9" Foreground="#9A3412" Margin="0,0,0,1"/>
                                    <TextBlock x:Name="KpiToReviewCountText" Text="0" FontSize="13" FontWeight="Bold" Foreground="#7C2D12"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        <!-- Total Amount -->
                        <Border Background="#F8FAFC" CornerRadius="6" Padding="10,6" BorderBrush="#E2E8F0" BorderThickness="1">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="&#xEAFD;" FontFamily="Segoe MDL2 Assets" Foreground="#2563EB" FontSize="12" VerticalAlignment="Center" Margin="0,0,6,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                <StackPanel>
                                    <TextBlock Text="Amount" FontSize="9" Foreground="#64748B" Margin="0,0,0,1"/>
                                    <TextBlock x:Name="KpiTotalAmountText" Text="0.00" FontSize="13" FontWeight="Bold" Foreground="#0F172A"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </StackPanel>

                <!-- Action Buttons Group -->
                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">


                    <!-- View Management Group -->
                    <Border Background="#E3F2FD" CornerRadius="6" Padding="8,6" BorderBrush="#2196F3" BorderThickness="1.5" Margin="0,0,12,0">
                        <StackPanel>
                            <TextBlock Text="📋 VIEW" FontSize="9" FontWeight="Bold" Foreground="#1976D2" Margin="0,0,0,4" HorizontalAlignment="Center"/>
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="LoadViewButton" Click="LoadView_Click" Style="{StaticResource StandardButtonStyle}" Background="Transparent" BorderThickness="0" Padding="8,6" ToolTip="Load saved view (columns + filters + sort)">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="&#xE8E5;" FontFamily="Segoe MDL2 Assets" FontSize="14" Foreground="#2196F3" VerticalAlignment="Center" Margin="0,0,5,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                        <TextBlock Text="Load View" Foreground="#2196F3" FontSize="11" FontWeight="SemiBold" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                                <Rectangle Width="1" Height="20" Fill="#90CAF9" Margin="4,0"/>
                                <Button x:Name="SaveViewButton" Click="SaveView_Click" Style="{StaticResource StandardButtonStyle}" Background="Transparent" BorderThickness="0" Padding="8,6" ToolTip="Save current view (columns + filters + sort)">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="&#xE74E;" FontFamily="Segoe MDL2 Assets" FontSize="14" Foreground="#1976D2" VerticalAlignment="Center" Margin="0,0,5,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                        <TextBlock Text="Save View" Foreground="#1976D2" FontSize="11" FontWeight="SemiBold" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <!-- Filter Management Group -->
                    <Border Background="#FFF3E0" CornerRadius="6" Padding="8,6" BorderBrush="#FF9800" BorderThickness="1.5" Margin="0,0,8,0">
                        <StackPanel>
                            <TextBlock Text="🔍 FILTER" FontSize="9" FontWeight="Bold" Foreground="#F57C00" Margin="0,0,0,4" HorizontalAlignment="Center"/>
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="LoadFilterButton" Click="LoadFilter_Click" Style="{StaticResource StandardButtonStyle}" Background="Transparent" BorderThickness="0" Padding="6,4" ToolTip="Load saved filter (criteria only)">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="&#xE71C;" FontFamily="Segoe MDL2 Assets" FontSize="13" Foreground="#FF9800" VerticalAlignment="Center" Margin="0,0,4,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                        <TextBlock Text="Load" Foreground="#FF9800" FontSize="11" FontWeight="SemiBold" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                                <Rectangle Width="1" Height="18" Fill="#FFB74D" Margin="3,0"/>
                                <Button x:Name="SaveFilterButton" Click="SaveFilter_Click" Style="{StaticResource StandardButtonStyle}" Background="Transparent" BorderThickness="0" Padding="6,4" ToolTip="Save current filter (criteria only)">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="&#xE74E;" FontFamily="Segoe MDL2 Assets" FontSize="13" Foreground="#F57C00" VerticalAlignment="Center" Margin="0,0,4,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                        <TextBlock Text="Save" Foreground="#F57C00" FontSize="11" FontWeight="SemiBold" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                                <Rectangle Width="1" Height="18" Fill="#FFB74D" Margin="3,0"/>
                                <Button x:Name="ReapplyFilterButton" Click="ReapplyFilter_Click" Style="{StaticResource StandardButtonStyle}" Background="Transparent" BorderThickness="0" Padding="6,4" ToolTip="Reapply current filter">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="&#xE72C;" FontFamily="Segoe MDL2 Assets" FontSize="13" Foreground="#FF9800" VerticalAlignment="Center" Margin="0,0,4,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                        <TextBlock Text="Reapply" Foreground="#FF9800" FontSize="11" FontWeight="SemiBold" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                                <Rectangle Width="1" Height="18" Fill="#FFB74D" Margin="3,0"/>
                                <Button x:Name="ResetFilterButton" Click="ResetFilter_Click" Style="{StaticResource StandardButtonStyle}" Background="Transparent" BorderThickness="0" Padding="6,4" ToolTip="Clear all filters">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="&#xE894;" FontFamily="Segoe MDL2 Assets" FontSize="13" Foreground="#9E9E9E" VerticalAlignment="Center" Margin="0,0,4,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                        <TextBlock Text="Reset" Foreground="#9E9E9E" FontSize="11" FontWeight="SemiBold" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <!-- Actions Group -->
                    <Border Background="#F8F9FA" CornerRadius="6" Padding="6,4" BorderBrush="#DEE2E6" BorderThickness="1" Margin="0,0,8,0">
                        <StackPanel Orientation="Horizontal">
                            <Rectangle Width="1" Height="20" Fill="#DEE2E6" Margin="4,0"/>
                            <Button x:Name="ExportButton" Click="Export_Click" Style="{StaticResource StandardButtonStyle}" Background="Transparent" BorderThickness="0" Padding="8,6" ToolTip="Export">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="&#xE74E;" FontFamily="Segoe MDL2 Assets" FontSize="14" Foreground="#00BCD4" VerticalAlignment="Center" Margin="0,0,5,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                                    <TextBlock Text="Export" Foreground="#00BCD4" FontSize="12" FontWeight="SemiBold" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Border>

                    <!-- Close Button -->
                    <Button x:Name="CloseViewButton" Click="CloseViewButton_Click" Style="{StaticResource StandardButtonStyle}" Background="#FFEBEE" BorderBrush="#EF5350" BorderThickness="1" Padding="10,6" ToolTip="Close View">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="&#xE711;" FontFamily="Segoe MDL2 Assets" FontSize="14" Foreground="#D32F2F" VerticalAlignment="Center" Margin="0,0,5,0" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display"/>
                            <TextBlock Text="Close" Foreground="#D32F2F" FontSize="12" FontWeight="SemiBold" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Main Content with Filters and Data -->
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" x:Name="FiltersRow"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Filters Section -->
            <Expander Grid.Row="0" IsExpanded="False" x:Name="FiltersExpander" Background="{DynamicResource BNPSectionBackground}" BorderBrush="{DynamicResource BNPBorderBrush}" BorderThickness="1" Margin="0,0,0,6">
                <Expander.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="&#xE71C;" FontFamily="Segoe MDL2 Assets" FontSize="16" Foreground="{DynamicResource BNPMainGreenBrush}" VerticalAlignment="Center" Margin="0,0,8,0"/>
                        <TextBlock Text="Filters" FontSize="14" FontWeight="SemiBold" Foreground="{DynamicResource BNPMainGreenBrush}"/>
                    </StackPanel>
                </Expander.Header>
                <Border Background="{DynamicResource BNPSectionBackground}" Padding="10,8">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Ambre Filters -->
                        <GroupBox Grid.Column="0" Margin="0,0,10,0" BorderBrush="{DynamicResource BNPBorderBrush}" BorderThickness="1" Background="#FAFAFA">
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="&#xE9D9;" FontFamily="Segoe MDL2 Assets" FontSize="14" Foreground="{DynamicResource BNPMainGreenBrush}" VerticalAlignment="Center" Margin="0,0,8,0"/>
                                    <TextBlock Text="Ambre Filters" FontWeight="SemiBold" Foreground="{DynamicResource BNPMainGreenBrush}"/>
                                </StackPanel>
                            </GroupBox.Header>
                            <StackPanel>
                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Reconciliation #:" VerticalAlignment="Center"/>
                                    <TextBox Grid.Column="1" Margin="5,0,0,0" Text="{Binding VM.FilterReconciliationNum, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>

                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Label:" VerticalAlignment="Center"/>
                                    <TextBox Grid.Column="1" Margin="5,0,0,0" Text="{Binding VM.FilterRawLabel, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>

                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Event #:" VerticalAlignment="Center"/>
                                    <TextBox Grid.Column="1" Margin="5,0,0,0" Text="{Binding VM.FilterEventNum, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>

                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Operation Date From:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <DatePicker SelectedDate="{Binding VM.FilterFromDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0" BorderThickness="0" Background="Transparent"/>
                                    </Border>
                                </Grid>

                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Operation Date To:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <DatePicker SelectedDate="{Binding VM.FilterToDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0" BorderThickness="0" Background="Transparent"/>
                                    </Border>
                                </Grid>

                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Deleted Date:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <DatePicker SelectedDate="{Binding VM.FilterDeletedDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0" BorderThickness="0" Background="Transparent"/>
                                    </Border>
                                </Grid>

                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Currency:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <ComboBox x:Name="CurrencyComboBox" Margin="5,0" BorderThickness="0" Background="Transparent" Style="{StaticResource ModernComboBoxStyle}"
                                                  ItemsSource="{Binding CurrencyOptions}"
                                                  SelectedItem="{Binding VM.FilterCurrency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Border>
                                </Grid>

                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Amount Min:" VerticalAlignment="Center"/>
                                    <TextBox Grid.Column="1" Margin="5,0,0,0" Text="{Binding VM.FilterMinAmount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>

                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Amount Max:" VerticalAlignment="Center"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <TextBox Margin="5" BorderThickness="0" Background="Transparent" Text="{Binding VM.FilterMaxAmount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Border>
                                </Grid>

                                <!-- New lines toggle -->
                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="New lines:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <CheckBox Grid.Column="1" Margin="5,0,0,0" IsChecked="{Binding VM.FilterNewLines, Mode=TwoWay}" Content="Created today"/>
                                </Grid>
                            </StackPanel>
                        </GroupBox>

                        <!-- DWings Filters -->
                        <GroupBox Grid.Column="1" Margin="0,0,10,0" BorderBrush="{DynamicResource BNPBorderBrush}" BorderThickness="1" Background="#FAFAFA">
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="&#xE8C9;" FontFamily="Segoe MDL2 Assets" FontSize="14" Foreground="{DynamicResource BNPMainGreenBrush}" VerticalAlignment="Center" Margin="0,0,8,0"/>
                                    <TextBlock Text="DWings Filters" FontWeight="SemiBold" Foreground="{DynamicResource BNPMainGreenBrush}"/>
                                </StackPanel>
                            </GroupBox.Header>
                            <StackPanel>
                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="BGI:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <TextBox Margin="5" BorderThickness="0" Background="Transparent" Text="{Binding VM.FilterDwInvoiceId, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Border>
                                </Grid>
                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Guarantee Ref:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <TextBox Margin="5" BorderThickness="0" Background="Transparent" Text="{Binding VM.FilterDwGuaranteeId, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Border>
                                </Grid>

                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Official Ref:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <TextBox Margin="5" BorderThickness="0" Background="Transparent"/>
                                    </Border>
                                </Grid>

                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="BGPMT:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <TextBox Margin="5" BorderThickness="0" Background="Transparent" Text="{Binding VM.FilterDwCommissionId, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Border>
                                </Grid>

                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Guarantee Type:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <ComboBox x:Name="TypeComboBox" Margin="5,0" BorderThickness="0" Background="Transparent" Style="{StaticResource ModernComboBoxStyle}"
                                                  ItemsSource="{Binding GuaranteeTypeOptions}"
                                                  SelectedItem="{Binding VM.FilterGuaranteeType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Border>
                                </Grid>

                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Transaction Type:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <ComboBox x:Name="TransactionTypeComboBox" Margin="5,0" BorderThickness="0" Background="Transparent" Style="{StaticResource ModernComboBoxStyle}"
                                                  ItemsSource="{Binding VM.TransactionTypeOptions}"
                                                  DisplayMemberPath="Name"
                                                  SelectedValuePath="Id"
                                                  SelectedValue="{Binding VM.FilterTransactionTypeId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        </ComboBox>
                                    </Border>
                                </Grid>

                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Client:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <TextBox Margin="5" BorderThickness="0" Background="Transparent"/>
                                    </Border>
                                </Grid>

                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Guarantee Status:" VerticalAlignment="Center"/>
                                    <ComboBox x:Name="GuaranteeStatusComboBox" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource ModernComboBoxStyle}"
                                              ItemsSource="{Binding GuaranteeStatusOptions}"
                                              SelectedItem="{Binding VM.FilterGuaranteeStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>

                                <!-- Unmatched toggle -->
                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Unmatched:" VerticalAlignment="Center" FontWeight="SemiBold"/>
                                    <CheckBox Grid.Column="1" Margin="5,0,0,0" IsChecked="{Binding VM.FilterUnmatched, Mode=TwoWay}" Content="No invoice linked"/>
                                </Grid>
                            </StackPanel>
                        </GroupBox>

                        <!-- User Filters -->
                        <GroupBox Grid.Column="2" Margin="0,0,0,0" BorderBrush="{DynamicResource BNPBorderBrush}" BorderThickness="1" Background="#FAFAFA">
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="&#xE77B;" FontFamily="Segoe MDL2 Assets" FontSize="14" Foreground="{DynamicResource BNPMainGreenBrush}" VerticalAlignment="Center" Margin="0,0,8,0"/>
                                    <TextBlock Text="User Filters" FontWeight="SemiBold" Foreground="{DynamicResource BNPMainGreenBrush}"/>
                                </StackPanel>
                            </GroupBox.Header>
                            <StackPanel>
                                <!-- Category filter removed per request -->

                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Action:" VerticalAlignment="Center"/>
                                    <ComboBox x:Name="ActionComboBox" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource ModernComboBoxStyle}"
                                              SelectedValuePath="USR_ID"
                                              ItemTemplate="{StaticResource UserFieldItemTemplate}"
                                              SelectedValue="{Binding VM.FilterActionId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemsSource>
                                            <MultiBinding Converter="{StaticResource UserFieldOptionsConverter}" ConverterParameter="Action">
                                                <Binding Path="DataContext.VM.FilterAccountId" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                                <Binding Path="DataContext.AllUserFields" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                                <Binding Path="DataContext.CurrentCountryObject" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                            </MultiBinding>
                                        </ComboBox.ItemsSource>
                                    </ComboBox>
                                </Grid>

                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="KPI:" VerticalAlignment="Center"/>
                                    <ComboBox x:Name="KPIComboBox" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource ModernComboBoxStyle}"
                                              SelectedValuePath="USR_ID"
                                              ItemTemplate="{StaticResource UserFieldItemTemplate}"
                                              SelectedValue="{Binding VM.FilterKpiId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemsSource>
                                            <MultiBinding Converter="{StaticResource UserFieldOptionsConverter}" ConverterParameter="KPI">
                                                <Binding Path="DataContext.VM.FilterAccountId" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                                <Binding Path="DataContext.AllUserFields" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                                <Binding Path="DataContext.CurrentCountryObject" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                            </MultiBinding>
                                        </ComboBox.ItemsSource>
                                    </ComboBox>
                                </Grid>

                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Incident Type:" VerticalAlignment="Center"/>
                                    <ComboBox x:Name="IncidentTypeComboBox" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource ModernComboBoxStyle}"
                                              SelectedValuePath="USR_ID"
                                              ItemTemplate="{StaticResource UserFieldItemTemplate}"
                                              SelectedValue="{Binding VM.FilterIncidentTypeId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <ComboBox.ItemsSource>
                                            <MultiBinding Converter="{StaticResource UserFieldOptionsConverter}" ConverterParameter="Incident Type">
                                                <Binding Path="DataContext.VM.FilterAccountId" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                                <Binding Path="DataContext.AllUserFields" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                                <Binding Path="DataContext.CurrentCountryObject" RelativeSource="{RelativeSource AncestorType=UserControl}"/>
                                            </MultiBinding>
                                        </ComboBox.ItemsSource>
                                    </ComboBox>
                                </Grid>

                                <!-- Action Done filter -->
                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Action Done:" VerticalAlignment="Center"/>
                                    <ComboBox Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource ModernComboBoxStyle}"
                                              SelectedValue="{Binding VM.FilterActionDone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedValuePath="Tag">
                                        <ComboBoxItem Tag="{x:Null}">All</ComboBoxItem>
                                        <ComboBoxItem Tag="False">Pending</ComboBoxItem>
                                        <ComboBoxItem Tag="True">Done</ComboBoxItem>
                                    </ComboBox>
                                </Grid>

                                <!-- Action Date From/To filters -->
                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Action Date From:" VerticalAlignment="Center"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <DatePicker SelectedDate="{Binding VM.FilterActionDateFrom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0" BorderThickness="0" Background="Transparent"/>
                                    </Border>
                                </Grid>
                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Action Date To:" VerticalAlignment="Center"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <DatePicker SelectedDate="{Binding VM.FilterActionDateTo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0" BorderThickness="0" Background="Transparent"/>
                                    </Border>
                                </Grid>

                                <!-- Potential Duplicates -->
                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Potential Duplicates:" VerticalAlignment="Center"/>
                                    <CheckBox x:Name="PotentialDuplicatesCheckBox" Grid.Column="1" Margin="5,0,0,0"
                                              Content="Show only potential duplicates"
                                              ToolTip="Show only rows where the same Event_Num occurs more than once in Ambre (DupCount > 1)."
                                              IsChecked="{Binding VM.FilterPotentialDuplicates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>

                                <!-- Assignee filter -->
                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Assignee:" VerticalAlignment="Center"/>
                                    <ComboBox x:Name="AssigneeComboBox" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource ModernComboBoxStyle}"
                                              ItemsSource="{Binding AssigneeOptions, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                              DisplayMemberPath="Name"
                                              SelectedValuePath="Id"
                                              SelectedValue="{Binding VM.FilterAssigneeId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <!-- optional: no static items; list includes empty entry -->
                                    </ComboBox>
                                </Grid>

                                <!-- Last Reviewed filter -->
                                <Grid Margin="0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Last Reviewed:" VerticalAlignment="Center"/>
                                    <ComboBox x:Name="LastReviewedComboBox" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource ModernComboBoxStyle}"
                                              SelectedValue="{Binding VM.FilterLastReviewed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              SelectedValuePath="Content">
                                        <ComboBoxItem Content="All" IsSelected="True"/>
                                        <ComboBoxItem Content="Never"/>
                                        <ComboBoxItem Content="Today"/>
                                        <ComboBoxItem Content="1week"/>
                                        <ComboBoxItem Content="1month"/>
                                    </ComboBox>
                                </Grid>

                                <Grid Margin="0,8">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="120"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Comments:" VerticalAlignment="Top" Margin="0,5,0,0" FontWeight="SemiBold"/>
                                    <Border Grid.Column="1" Background="White" CornerRadius="4" BorderBrush="#DDDDDD" BorderThickness="1">
                                        <TextBox Margin="5"
                                             BorderThickness="0"
                                             Background="Transparent"
                                             TextWrapping="Wrap"
                                             AcceptsReturn="True"
                                             Height="60"
                                             Text="{Binding VM.FilterComments, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Border>
                                </Grid>

                            </StackPanel>
                        </GroupBox>

                    </Grid>
                </Border>
            </Expander>

            <!-- KPI Summary Bar - Now integrated in header above -->

            <!-- Data Grid Section -->
            <Border Grid.Row="2" Margin="15" Background="White" BorderBrush="#DDDDDD" BorderThickness="1" CornerRadius="8">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Results Grid -->
                    <DataGrid x:Name="ResultsDataGrid" Grid.Row="0"
                              AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              IsReadOnly="False"
                              HeadersVisibility="All"
                              GridLinesVisibility="Horizontal"
                              Margin="0,0,0,0"
                              ItemsSource="{Binding VM.ViewData, RelativeSource={RelativeSource AncestorType=UserControl}}"
                              EnableRowVirtualization="True"
                              EnableColumnVirtualization="True"
                              VirtualizingPanel.IsVirtualizing="True"
                              VirtualizingPanel.VirtualizationMode="Recycling"
                              FrozenColumnCount="2"
                              SelectionMode="Extended"
                              SelectionUnit="FullRow"
                              Loaded="ResultsDataGrid_Loaded"
                              ColumnReordering="ResultsDataGrid_ColumnReordering"
                              PreviewMouseWheel="ResultsDataGrid_PreviewMouseWheel"
                              PreviewMouseRightButtonUp="ResultsDataGrid_PreviewMouseRightButtonUp"
                              VirtualizingStackPanel.IsVirtualizingWhenGrouping="True"
                              ScrollViewer.CanContentScroll="True"
                              ScrollViewer.IsDeferredScrollingEnabled="False"
                              RowHeight="25"
                              RowHeaderWidth="0"
                              MouseDoubleClick="ResultsDataGrid_MouseDoubleClick"
                              CellEditEnding="ResultsDataGrid_CellEditEnding">
                        <DataGrid.Resources>
                            <!-- In-grid editing: decouple ComboBox visuals from theme to avoid ancestor-binding errors -->
                            <Style TargetType="ComboBox" BasedOn="{x:Null}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="ItemContainerStyle">
                                    <Setter.Value>
                                        <Style TargetType="ComboBoxItem" BasedOn="{x:Null}">
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="ComboBoxItem" BasedOn="{x:Null}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                            </Style>
                            <!-- Cell Style for Reviewed Today Highlight -->
                            <Style x:Key="ReviewedTodayHighlight" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsReviewedToday}" Value="True">
                                        <Setter Property="Background" Value="#E8F5E9"/>
                                        <Setter Property="BorderBrush" Value="#A5D6A7"/>
                                        <Setter Property="BorderThickness" Value="0,0,1,0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="Background" Value="#F3F4F6"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="Padding" Value="6,3"/>
                                <Setter Property="BorderBrush" Value="#DDDDDD"/>
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Padding" Value="6,2"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="#DDDDDD"/>
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGridCell_PreviewMouseLeftButtonDown"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="DataGridCell">
                                            <Grid>
                                                <Border x:Name="CellBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                    <ContentPresenter VerticalAlignment="Center" Margin="2,0,18,0"/>
                                                </Border>
                                                <!-- subtle edit glyph -->
                                                <TextBlock x:Name="EditGlyph" Text="&#xE70F;" FontFamily="Segoe MDL2 Assets" FontSize="10" Foreground="#9AA1B2"
                                                           HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,4,0" Opacity="0"/>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <!-- editable state shows faint glyph -->
                                                <Trigger Property="IsReadOnly" Value="False">
                                                    <Setter TargetName="EditGlyph" Property="Opacity" Value="0.35"/>
                                                    <Setter Property="ToolTip" Value="Editable"/>
                                                </Trigger>
                                                <!-- hover highlights subtly and increases glyph visibility -->
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="CellBorder" Property="Background" Value="#F7FAFF"/>
                                                    <Setter TargetName="EditGlyph" Property="Opacity" Value="0.65"/>
                                                </Trigger>
                                                <!-- selection priority -->
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="CellBorder" Property="Background" Value="#DCEBFF"/>
                                                    <Setter Property="BorderBrush" Value="#A7C5FF"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </Trigger>
                                                <!-- read-only hides glyph entirely -->
                                                <Trigger Property="IsReadOnly" Value="True">
                                                    <Setter TargetName="EditGlyph" Property="Opacity" Value="0"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu>
                                            <!-- Quick Set submenus will be populated at open time -->
                                            <MenuItem Header="Set Action" x:Name="QuickSetActionRoot" Tag="Action"/>
                                            <MenuItem Header="Set KPI" x:Name="QuickSetKpiRoot" Tag="KPI"/>
                                            <MenuItem Header="Set Incident Type" x:Name="QuickSetIncidentRoot" Tag="Incident Type"/>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                                <EventSetter Event="ContextMenuOpening" Handler="DataGridRow_ContextMenuOpening"/>
                                <Style.Triggers>
                                    <!-- Removed: IsNewlyAdded and IsUpdated background colors -->
                                    <!-- Only keep hover and selection states -->
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#EEF5FF"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#DCEBFF"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <!-- New/Updated indicators placed first -->
                            <DataGridTemplateColumn Header="" Width="30" IsReadOnly="True" CanUserResize="False" CanUserReorder="False" CellStyle="{StaticResource ReviewedTodayHighlight}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="N" Foreground="Red" FontWeight="Bold" HorizontalAlignment="Center"
                                                   ToolTip="New line imported (not present previously)"
                                                   Visibility="{Binding IsNewlyAdded, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="" Width="36" IsReadOnly="True" CanUserResize="False" CanUserReorder="False" CellStyle="{StaticResource ReviewedTodayHighlight}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="U" Foreground="#1976D2" FontWeight="Bold" HorizontalAlignment="Center"
                                                   ToolTip="Updated since last import"
                                                   Visibility="{Binding IsUpdated, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <!-- Group indicator (clickable) -->
                            <DataGridTemplateColumn Header="Group" Width="50" IsReadOnly="True" CanUserResize="False" CanUserReorder="False">
                                <!-- Override cell style to avoid global PreviewMouseLeftButtonDown edit interception -->
                                <DataGridTemplateColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Padding" Value="6,2"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="#DDDDDD"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="DataGridCell">
                                                    <Grid>
                                                        <Border x:Name="CellBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                            <ContentPresenter VerticalAlignment="Center" Margin="2,0,18,0"/>
                                                        </Border>
                                                        <TextBlock x:Name="EditGlyph" Text="&#xE70F;" FontFamily="Segoe MDL2 Assets" FontSize="10" Foreground="#9AA1B2"
                                                                   HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,4,0" Opacity="0"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding IsReviewedToday}" Value="True">
                                                            <Setter TargetName="CellBorder" Property="Background" Value="#E8F5E9"/>
                                                            <Setter Property="BorderBrush" Value="#A5D6A7"/>
                                                        </DataTrigger>
                                                        <Trigger Property="IsReadOnly" Value="False">
                                                            <Setter TargetName="EditGlyph" Property="Opacity" Value="0.35"/>
                                                            <Setter Property="ToolTip" Value="Editable"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="CellBorder" Property="Background" Value="#F7FAFF"/>
                                                            <Setter TargetName="EditGlyph" Property="Opacity" Value="0.65"/>
                                                        </Trigger>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter TargetName="CellBorder" Property="Background" Value="#DCEBFF"/>
                                                            <Setter Property="BorderBrush" Value="#A7C5FF"/>
                                                            <Setter Property="Foreground" Value="Black"/>
                                                        </Trigger>
                                                        <Trigger Property="IsReadOnly" Value="True">
                                                            <Setter TargetName="EditGlyph" Property="Opacity" Value="0"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGridTemplateColumn.CellStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="G" Foreground="#2E7D32" FontWeight="Bold" HorizontalAlignment="Center" Cursor="Hand"
                                                   ToolTip="Open related entries across accounts (appears only when a cross-account pair exists: same BGI or Internal Reference)"
                                                   Visibility="{Binding IsMatchedAcrossAccounts, Converter={StaticResource BoolToVisibilityConverter}}"
                                                   MouseLeftButtonUp="MatchedIndicator_MouseLeftButtonUp"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <!-- Account side column (P/R) -->
                            <DataGridTextColumn Header="Account" Binding="{Binding AccountSide}" Width="60" IsReadOnly="True" CellStyle="{StaticResource ReviewedTodayHighlight}">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Setter Property="ToolTip" Value="P = Pivot, R = Receivable"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding AccountSide}" Value="P">
                                                <Setter Property="ToolTip" Value="P = Pivot account"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding AccountSide}" Value="R">
                                                <Setter Property="ToolTip" Value="R = Receivable account"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Event Num" Binding="{Binding Event_Num}" Width="100" IsReadOnly="True" CellStyle="{StaticResource ReviewedTodayHighlight}" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            <DataGridTextColumn Header="Pivot Transaction Codes" Binding="{Binding Pivot_TransactionCodesFromLabel}" Width="150" IsReadOnly="True" CellStyle="{StaticResource ReviewedTodayHighlight}"/>
                            <DataGridTextColumn Header="Category" Binding="{Binding CategoryLabel}" Width="140" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Raw Label" Binding="{Binding RawLabel}" Width="200" IsReadOnly="True"/>
                            <!-- Newly added DWINGS invoice columns near the beginning -->
                            <DataGridTextColumn Header="Receiver" Binding="{Binding I_RECEIVER_NAME}" Width="180" IsReadOnly="True"/>
                            <DataGridTextColumn Header="MT Status" Binding="{Binding I_MT_STATUS}" Width="120" IsReadOnly="True"/>
                            <DataGridTextColumn Header="MT Error message" Binding="{Binding I_ERROR_MESSAGE}" Width="220" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Original Amount" Binding="{Binding LocalSignedAmount, StringFormat={}{0:N2}}" Width="130" IsReadOnly="True" ElementStyle="{StaticResource RightAlignedTextStyle}"/>
                            <DataGridTextColumn Header="Operation Date" Binding="{Binding Operation_Date, StringFormat={}{0:dd/MM/yyyy}}" Width="110" IsReadOnly="True" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            <DataGridTextColumn Header="Reconciliation Num" Binding="{Binding Reconciliation_Num}" Width="130" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Reconciliation Origin Num" Binding="{Binding ReconciliationOrigin_Num}" Width="150" IsReadOnly="True"/>
                            <!-- DWINGS link fields (from T_Reconciliation) -->
                            <DataGridTextColumn Header="DW Invoice ID (BGI)" Binding="{Binding DWINGS_InvoiceID}" Width="150" IsReadOnly="True"/>
                            <DataGridTextColumn Header="DW Commission (BGPMT)" Binding="{Binding DWINGS_BGPMT}" Width="170" IsReadOnly="True"/>
                            <DataGridTextColumn Header="DW Guarantee ID" Binding="{Binding DWINGS_GuaranteeID}" Width="170" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Amount in Country Cur" Binding="{Binding SignedAmount, StringFormat={}{0:N2}}" Width="150" IsReadOnly="True" ElementStyle="{StaticResource RightAlignedTextStyle}"/>
                            <DataGridTextColumn Header="CCY" Binding="{Binding CCY}" Width="60" IsReadOnly="True" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            
                            <!-- Missing Amount: conditional formatting (Green=0, Orange>0, Red<0) -->
                            <DataGridTemplateColumn Header="Missing Amount" Width="130" SortMemberPath="MissingAmount" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border Padding="4,2">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <!-- Green: Balanced (= 0) -->
                                                        <DataTrigger Binding="{Binding MissingAmount}" Value="0">
                                                            <Setter Property="Background" Value="#E8F5E9"/>
                                                        </DataTrigger>
                                                        <!-- Orange: Waiting for payment (> 0) -->
                                                        <DataTrigger Binding="{Binding MissingAmount, Converter={StaticResource IsPositiveConverter}}" Value="True">
                                                            <Setter Property="Background" Value="#FFF3E0"/>
                                                        </DataTrigger>
                                                        <!-- Red: Overpayment (< 0) -->
                                                        <DataTrigger Binding="{Binding MissingAmount, Converter={StaticResource IsNegativeConverter}}" Value="True">
                                                            <Setter Property="Background" Value="#FFEBEE"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock Text="{Binding MissingAmount, StringFormat={}{0:N2}}" HorizontalAlignment="Right" VerticalAlignment="Center">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="#666"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding MissingAmount}" Value="0">
                                                                <Setter Property="Foreground" Value="#2E7D32"/>
                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding MissingAmount, Converter={StaticResource IsPositiveConverter}}" Value="True">
                                                                <Setter Property="Foreground" Value="#EF6C00"/>
                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding MissingAmount, Converter={StaticResource IsNegativeConverter}}" Value="True">
                                                                <Setter Property="Foreground" Value="#C62828"/>
                                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                                <TextBlock.ToolTip>
                                                    <ToolTip>
                                                        <StackPanel>
                                                            <TextBlock FontWeight="Bold" Margin="0,0,0,4">Missing Amount</TextBlock>
                                                            <TextBlock>
                                                                <Run Text="• Positive: Waiting for more payments"/>
                                                                <LineBreak/>
                                                                <Run Text="• Negative: Overpayment"/>
                                                                <LineBreak/>
                                                                <Run Text="• Zero: Balanced"/>
                                                            </TextBlock>
                                                        </StackPanel>
                                                    </ToolTip>
                                                </TextBlock.ToolTip>
                                            </TextBlock>
                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            
                            <!-- Counterpart Info: Total amount and count -->
                            <DataGridTemplateColumn Header="Counterpart" Width="150" SortMemberPath="CounterpartTotalAmount" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                            <StackPanel.ToolTip>
                                                <ToolTip>
                                                    <StackPanel>
                                                        <TextBlock FontWeight="Bold" Margin="0,0,0,4">Counterpart Lines</TextBlock>
                                                        <TextBlock>
                                                            <Run Text="Total amount: "/>
                                                            <Run Text="{Binding CounterpartTotalAmount, StringFormat={}{0:N2}, Mode=OneWay}" FontWeight="Bold"/>
                                                            <LineBreak/>
                                                            <Run Text="Number of lines: "/>
                                                            <Run Text="{Binding CounterpartCount, Mode=OneWay}" FontWeight="Bold"/>
                                                        </TextBlock>
                                                    </StackPanel>
                                                </ToolTip>
                                            </StackPanel.ToolTip>
                                            <TextBlock Text="{Binding CounterpartTotalAmount, StringFormat={}{0:N2}}" Foreground="#1976D2" FontWeight="SemiBold" VerticalAlignment="Center"/>
                                            <TextBlock Text=" (" Foreground="#666" Margin="4,0,0,0" VerticalAlignment="Center"/>
                                            <TextBlock Text="{Binding CounterpartCount}" Foreground="#666" VerticalAlignment="Center"/>
                                            <TextBlock Foreground="#666" VerticalAlignment="Center">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat=" {0})">
                                                        <Binding Path="CounterpartCount" Converter="{StaticResource PluralConverter}" ConverterParameter="line|lines"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            
                            <DataGridTextColumn Header="Value Date" Binding="{Binding Value_Date, StringFormat={}{0:dd/MM/yyyy}}" Width="110" IsReadOnly="True" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            <DataGridTextColumn Header="Guarantee Type" Width="130" IsReadOnly="True" SortMemberPath="G_GUARANTEE_TYPE">
                                <DataGridTextColumn.Binding>
                                    <Binding Path="G_GUARANTEE_TYPE" Converter="{StaticResource GuaranteeTypeDisplayConverter}"/>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <!-- Colonnes T_Reconciliation (données combinées à plat dans ReconciliationViewData) -->

                            <!-- Action: editable ComboBox filtered by category and account type -->
                            <DataGridTemplateColumn Header="Action" Width="120" SortMemberPath="Action">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border>
                                            <Border.Background>
                                                <MultiBinding Converter="{StaticResource ActionColorConverter}">
                                                    <Binding Path="Action"/>
                                                    <Binding ElementName="Root" Path="DataContext.AllUserFields"/>
                                                    <Binding Path="ActionStatus"/>
                                                </MultiBinding>
                                            </Border.Background>
                                            <TextBlock Margin="2,0,2,0" HorizontalAlignment="Center" TextAlignment="Center">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource UserFieldIdToNameConverter}">
                                                        <Binding Path="Action"/>
                                                        <Binding ElementName="Root" Path="DataContext.AllUserFields"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <Border>
                                            <Border.Background>
                                                <MultiBinding Converter="{StaticResource ActionColorConverter}">
                                                    <Binding Path="Action"/>
                                                    <Binding ElementName="Root" Path="DataContext.AllUserFields"/>
                                                    <Binding Path="ActionStatus"/>
                                                </MultiBinding>
                                            </Border.Background>
                                            <ComboBox Width="Auto"
                                                      SelectedValue="{Binding Action, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                      SelectedValuePath="USR_ID"
                                                      DisplayMemberPath="USR_FieldName"
                                                      SelectionChanged="UserFieldComboBox_SelectionChanged"
                                                      Tag="Action"
                                                      HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                                <ComboBox.ItemsSource>
                                                    <MultiBinding Converter="{StaticResource UserFieldOptionsConverter}" ConverterParameter="Action">
                                                        <Binding Path="Account_ID"/>
                                                        <Binding ElementName="Root" Path="DataContext.AllUserFields"/>
                                                        <Binding ElementName="Root" Path="DataContext.CurrentCountryObject"/>
                                                    </MultiBinding>
                                                </ComboBox.ItemsSource>
                                            </ComboBox>
                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <!-- Action Status (Pending/Done) -->
                            <DataGridTemplateColumn Header="Action Status" Width="120" SortMemberPath="ActionStatus">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ActionStatus, Converter={StaticResource BoolToPendingDoneConverter}}" HorizontalAlignment="Center" TextAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox Width="Auto"
                                                  SelectedValue="{Binding ActionStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedValuePath="Tag"
                                                  SelectionChanged="UserFieldComboBox_SelectionChanged"
                                                  Tag="ActionStatus"
                                                  HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                            <ComboBoxItem Tag="False">PENDING</ComboBoxItem>
                                            <ComboBoxItem Tag="True">DONE</ComboBoxItem>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <!-- Action Date -->
                            <DataGridTemplateColumn Header="Action Date" Width="160" SortMemberPath="ActionDate">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ActionDate, StringFormat={}{0:dd/MM/yyyy}}" HorizontalAlignment="Center" TextAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <DatePicker Grid.Column="0" Language="fr-FR"
                                                        SelectedDateFormat="Short"
                                                        SelectedDate="{Binding ActionDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        Loaded="DatePicker_OpenOnLoad"/>
                                            <Button Grid.Column="1" Content="📅" ToolTip="Set to Today" 
                                                    Padding="4,2" Margin="2,0,0,0" FontSize="10"
                                                    Click="SetDateToToday_Click" Tag="ActionDate"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <!-- Assignee: displays user name, binds ID -->
                            <DataGridTemplateColumn Header="Assignee" Width="140" SortMemberPath="Assignee">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource AssigneeIdToNameConverter}">
                                                    <Binding Path="Assignee"/>
                                                    <Binding ElementName="Root" Path="DataContext.AssigneeOptions"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox Width="Auto"
                                                  ItemsSource="{Binding ElementName=Root, Path=DataContext.AssigneeOptions}"
                                                  DisplayMemberPath="Name"
                                                  SelectedValuePath="Id"
                                                  SelectedValue="{Binding Assignee, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Comments" Width="220" SortMemberPath="LastComment">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border Background="Transparent"
                                                Padding="0"
                                                ToolTipService.InitialShowDelay="0"
                                                ToolTipService.BetweenShowDelay="0"
                                                ToolTipService.ShowDuration="300000"
                                                PreviewMouseLeftButtonUp="CommentsCell_Click">
                                            <Border.ToolTip>
                                                <ScrollViewer VerticalScrollBarVisibility="Auto" MaxHeight="800" MaxWidth="800">
                                                    <TextBlock Text="{Binding Comments}" TextWrapping="Wrap"/>
                                                </ScrollViewer>
                                            </Border.ToolTip>
                                            <TextBlock Text="{Binding LastComment}" TextTrimming="CharacterEllipsis" />
                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Internal Invoice Ref" Binding="{Binding InternalInvoiceReference}" Width="140"/>

                            <!-- First Claim Date with DatePicker -->
                            <DataGridTemplateColumn Header="First Claim Date" Width="160" SortMemberPath="FirstClaimDate">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding FirstClaimDate, StringFormat={}{0:dd/MM/yyyy}}" HorizontalAlignment="Center" TextAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <DatePicker Grid.Column="0" Language="fr-FR"
                                                        SelectedDateFormat="Short"
                                                        SelectedDate="{Binding FirstClaimDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        Loaded="DatePicker_OpenOnLoad"/>
                                            <Button Grid.Column="1" Content="📅" ToolTip="Set to Today" 
                                                    Padding="4,2" Margin="2,0,0,0" FontSize="10"
                                                    Click="SetDateToToday_Click" Tag="FirstClaimDate"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                            <!-- Last Claim Date with DatePicker -->
                            <DataGridTemplateColumn Header="Last Claim Date" Width="160" SortMemberPath="LastClaimDate">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding LastClaimDate, StringFormat={}{0:dd/MM/yyyy}}" HorizontalAlignment="Center" TextAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <DatePicker Grid.Column="0" Language="fr-FR"
                                                        SelectedDateFormat="Short"
                                                        SelectedDate="{Binding LastClaimDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        Loaded="DatePicker_OpenOnLoad"/>
                                            <Button Grid.Column="1" Content="📅" ToolTip="Set to Today" 
                                                    Padding="4,2" Margin="2,0,0,0" FontSize="10"
                                                    Click="SetDateToToday_Click" Tag="LastClaimDate"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                            <DataGridCheckBoxColumn Header="To Remind" Binding="{Binding ToRemind}" Width="80" ElementStyle="{StaticResource CenteredCheckBoxStyle}"/>

                            <!-- Remind Date with DatePicker -->
                            <DataGridTemplateColumn Header="Remind Date" Width="150" SortMemberPath="ToRemindDate">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ToRemindDate, StringFormat={}{0:dd/MM/yyyy}}" HorizontalAlignment="Center" TextAlignment="Center"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <DatePicker Grid.Column="0" Language="fr-FR"
                                                        SelectedDateFormat="Short"
                                                        SelectedDate="{Binding ToRemindDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        Loaded="DatePicker_OpenOnLoad"/>
                                            <Button Grid.Column="1" Content="📅" ToolTip="Set to Today" 
                                                    Padding="4,2" Margin="2,0,0,0" FontSize="10"
                                                    Click="SetDateToToday_Click" Tag="ToRemindDate"/>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridCheckBoxColumn Header="ACK" Binding="{Binding ACK}" Width="60" ElementStyle="{StaticResource CenteredCheckBoxStyle}"/>
                            <DataGridTextColumn Header="Swift Code" Binding="{Binding SwiftCode}" Width="100"/>
                            <DataGridTextColumn Header="Payment Reference" Binding="{Binding PaymentReference}" Width="130"/>
                            <DataGridTextColumn Header="User" Binding="{Binding Reco_ModifiedBy}" Width="120" IsReadOnly="True"/>
                            <!-- KPI: editable ComboBox -->
                            <DataGridTemplateColumn Header="KPI" Width="160" SortMemberPath="KPI">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource UserFieldIdToNameConverter}">
                                                    <Binding Path="KPI"/>
                                                    <Binding ElementName="Root" Path="DataContext.AllUserFields"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox Width="Auto"
                                                  SelectedValue="{Binding KPI, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedValuePath="USR_ID"
                                                  DisplayMemberPath="USR_FieldName"
                                                  SelectionChanged="UserFieldComboBox_SelectionChanged"
                                                  Tag="KPI"
                                                  HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                            <ComboBox.ItemsSource>
                                                <MultiBinding Converter="{StaticResource UserFieldOptionsConverter}" ConverterParameter="KPI">
                                                    <Binding Path="Account_ID"/>
                                                    <Binding ElementName="Root" Path="DataContext.AllUserFields"/>
                                                    <Binding ElementName="Root" Path="DataContext.CurrentCountryObject"/>
                                                </MultiBinding>
                                            </ComboBox.ItemsSource>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                            <!-- Incident Type: editable ComboBox -->
                            <DataGridTemplateColumn Header="Incident Type" Width="180" SortMemberPath="IncidentType">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource UserFieldIdToNameConverter}">
                                                    <Binding Path="IncidentType"/>
                                                    <Binding ElementName="Root" Path="DataContext.AllUserFields"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox Width="Auto"
                                                  SelectedValue="{Binding IncidentType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedValuePath="USR_ID"
                                                  DisplayMemberPath="USR_FieldName"
                                                  SelectionChanged="UserFieldComboBox_SelectionChanged"
                                                  Tag="Incident Type"
                                                  HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                            <ComboBox.ItemsSource>
                                                <MultiBinding Converter="{StaticResource UserFieldOptionsConverter}" ConverterParameter="Incident Type">
                                                    <Binding Path="Account_ID"/>
                                                    <Binding ElementName="Root" Path="DataContext.AllUserFields"/>
                                                    <Binding ElementName="Root" Path="DataContext.CurrentCountryObject"/>
                                                </MultiBinding>
                                            </ComboBox.ItemsSource>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                            <DataGridCheckBoxColumn Header="Risky Item"
                                                    Width="100"
                                                    Binding="{Binding RiskyItem}"
                                                    IsThreeState="False"
                                                    ElementStyle="{StaticResource CenteredCheckBoxStyle}"/>
                            <!-- Reason Non Risky: editable ComboBox bound to referential filtered by RISKY category -->
                            <DataGridTemplateColumn Header="Reason Non Risky" Width="180" SortMemberPath="ReasonNonRisky">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource UserFieldIdToNameConverter}">
                                                    <Binding Path="ReasonNonRisky"/>
                                                    <Binding ElementName="Root" Path="DataContext.AllUserFields"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <ComboBox Width="Auto"
                                                  SelectedValue="{Binding ReasonNonRisky, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  SelectedValuePath="USR_ID"
                                                  DisplayMemberPath="USR_FieldName"
                                                  SelectionChanged="UserFieldComboBox_SelectionChanged"
                                                  Tag="ReasonNonRisky"
                                                  HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                            <ComboBox.ItemsSource>
                                                <MultiBinding Converter="{StaticResource UserFieldOptionsConverter}" ConverterParameter="RISKY">
                                                    <Binding Path="Account_ID"/>
                                                    <Binding ElementName="Root" Path="DataContext.AllUserFields"/>
                                                    <Binding ElementName="Root" Path="DataContext.CurrentCountryObject"/>
                                                </MultiBinding>
                                            </ComboBox.ItemsSource>
                                        </ComboBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn Header="DW Currency" Binding="{Binding GUARANTEE_CURRENCY}" Width="80" IsReadOnly="True" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            <DataGridTextColumn Header="DW Amount" Binding="{Binding GUARANTEE_AMOUNT, StringFormat={}{0:N2}}" Width="120" IsReadOnly="True" ElementStyle="{StaticResource RightAlignedTextStyle}"/>
                            
                            <!-- DWINGS Guarantee extended fields -->
                            <DataGridTextColumn Header="NatureOfDeal" Binding="{Binding G_NATURE}" Width="110" IsReadOnly="True" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            <DataGridTextColumn Header="Event Status" Binding="{Binding G_EVENT_STATUS}" Width="120" IsReadOnly="True" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            <DataGridTextColumn Header="Issue Date" Binding="{Binding G_ISSUEDATE}" Width="110" IsReadOnly="True" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            <DataGridTextColumn Header="PartyID" Binding="{Binding G_PARTY_ID}" Width="110" IsReadOnly="True" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            <DataGridTextColumn Header="PartyName" Binding="{Binding G_NAME1}" Width="160" IsReadOnly="True"/>
                            
                            <!-- DWINGS Invoice extended fields -->
                            <DataGridTextColumn Header="Req Amount" Binding="{Binding I_REQUESTED_INVOICE_AMOUNT}" Width="130" IsReadOnly="True" ElementStyle="{StaticResource RightAlignedTextStyle}"/>
                            <DataGridTextColumn Header="Cur" Binding="{Binding I_BILLING_CURRENCY}" Width="70" IsReadOnly="True" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            <DataGridTextColumn Header="StartDate" Binding="{Binding I_START_DATE}" Width="110" IsReadOnly="True" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            <DataGridTextColumn Header="EndDate" Binding="{Binding I_END_DATE}" Width="110" IsReadOnly="True" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            <DataGridTextColumn Header="Invoice Status" Binding="{Binding I_T_INVOICE_STATUS}" Width="120" IsReadOnly="True" ElementStyle="{StaticResource CenteredTextStyle}"/>
                            <DataGridTextColumn Header="Payment Method" Binding="{Binding I_PAYMENT_METHOD}" Width="140" IsReadOnly="True" SortMemberPath="I_PAYMENT_METHOD"/>

                        </DataGrid.Columns>
                    </DataGrid>

                    <!-- Footer load more button (shown when scrolled to bottom) -->
                    <Button x:Name="LoadMoreFooterButton"
                            Grid.Row="1"
                            Content="Charger plus de données"
                            Margin="8"
                            Padding="10,6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Visibility="Collapsed"
                            Click="LoadMoreButton_Click"/>
                </Grid>
            </Border>
        </Grid>

        <!-- Floating toast notification (enhanced) -->
        <Border x:Name="ToastPanel"
                Grid.RowSpan="2"
                Background="#DD1E1E1E"
                BorderBrush="#4CAF50"
                BorderThickness="2"
                CornerRadius="8"
                Padding="12,8"
                Margin="10"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Visibility="Collapsed"
                Panel.ZIndex="1000"
                MouseLeftButtonUp="ToastPanel_MouseLeftButtonUp"
                Cursor="Hand">
            <Border.Effect>
                <DropShadowEffect Color="Black" BlurRadius="15" ShadowDepth="3" Opacity="0.5"/>
            </Border.Effect>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="✨" FontSize="16" Foreground="#4CAF50" VerticalAlignment="Center" Margin="0,0,8,0"/>
                <TextBlock x:Name="ToastText" Text="" Foreground="White" FontWeight="SemiBold" TextWrapping="Wrap" MaxWidth="400"/>
                <TextBlock Text="→" FontFamily="Segoe MDL2 Assets" FontSize="12" Foreground="#4CAF50" VerticalAlignment="Center" Margin="8,0,0,0"/>
            </StackPanel>
        </Border>
        
        <!-- Loading Overlay -->
        <Border Grid.RowSpan="2" Background="#80FFFFFF" 
                Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}"
                Panel.ZIndex="1000">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Text="⏳" FontSize="48" HorizontalAlignment="Center" Margin="0,0,0,16">
                    <TextBlock.RenderTransform>
                        <RotateTransform x:Name="LoadingRotation" CenterX="24" CenterY="24"/>
                    </TextBlock.RenderTransform>
                    <TextBlock.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetName="LoadingRotation"
                                                   Storyboard.TargetProperty="Angle"
                                                   From="0" To="360" Duration="0:0:2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </TextBlock.Triggers>
                </TextBlock>
                <TextBlock Text="Loading data..." FontSize="16" FontWeight="SemiBold" 
                          Foreground="{DynamicResource BNPMainGreenBrush}" HorizontalAlignment="Center"/>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>